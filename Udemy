import sys
import time
import pygame

ANCHO=640
LARGO=480
color_azul=(0, 0 , 64)
color_blanco=(255,255,255)
pygame.init()

class Bolita(pygame.sprite.Sprite):
    def __init__(self):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load('imagenes/bolita.png')
        self.rect = self.image.get_rect()
        self.rect.centerx = ANCHO/2
        self.rect.centery = LARGO/2
        self.speed =[3,3]
    
        
    def update(self):
        if  self.rect.top <=0:
            self.speed[1] = -self.speed[1]
        elif self.rect.right >= ANCHO or self.rect.left <=0:
            self.speed[0]=-self.speed[0]
        self.rect.move_ip(self.speed)

class Paleta(pygame.sprite.Sprite):
    def __init__(self):
       pygame.sprite.Sprite.__init__(self)
       self.image = pygame.image.load('imagenes/paleta.png')
       self.rect = self.image.get_rect()
       self.rect.midbottom = (ANCHO/2, LARGO-20)
       self.speed =[0,0]       
    def update(self,evento):
        if evento.key == pygame.K_LEFT and self.rect.left > 0:
            self.speed=[-5,0]
        elif evento.key == pygame.K_RIGHT and self.rect.right < ANCHO:
            self.speed=[5,0]
        else:
            self.speed=[0,0] 
        self.rect.move_ip(self.speed)
class Ladrillo(pygame.sprite.Sprite):
    def __init__(self,posicion):
        pygame.sprite.Sprite.__init__(self)
        self.image = pygame.image.load('imagenes/ladrillo.png')
        self.rect = self.image.get_rect()
        self.rect.topleft=posicion
class Muro(pygame.sprite.Group):
    def __init__(self, cantidadLadrillos):
        pygame.sprite.Group.__init__(self)
        
        pos_x = 0
        pos_y = 20
        for i in range(cantidadLadrillos):
            ladrillo = Ladrillo((pos_x,pos_y))
            self.add(ladrillo)
            pos_x += ladrillo.rect.width
            if pos_x >= ANCHO:
                pos_x=0
                pos_y += ladrillo.rect.height
def juego_terminado():
    fuente = pygame.font.SysFont('Arial',72)
    texto = fuente.render('Juego terminado :(', True, color_blanco)
    texto_rect = texto.get_rect()
    texto_rect.center=[ANCHO/2,LARGO/2]
    pantalla.blit(texto,texto_rect)
    pygame.display.flip()
    time.sleep(3)
    sys.exit()
def mostrar_puntuacion():
    fuente = pygame.font.SysFont('Consolas',20)
    texto = fuente.render(str(puntuacion).zfill(5), True, color_blanco)
    texto_rect = texto.get_rect()
    texto_rect.topleft=[0,0]
    pantalla.blit(texto,texto_rect)
def mostrar_vidas():
    fuente = pygame.font.SysFont('Consolas',20)
    cadena = "Vidas: "+str(vidas).zfill(2)
    texto = fuente.render(cadena, True, color_blanco)
    texto_rect = texto.get_rect()
    texto_rect.torighy=[ANCHO,0]
    pantalla.blit(texto,texto_rect)
pantalla = pygame.display.set_mode((ANCHO,LARGO))
pygame.display.set_caption('Juego de ladrillos')
reloj=pygame.time.Clock()
pygame.key.set_repeat(30)
bolita = Bolita()
jugador = Paleta()
muro = Muro(50)
puntuacion = 0
vidas=3
while True:
    reloj.tick(60)  
    for evento in pygame.event.get():
        if evento.type == pygame.QUIT:
            sys.exit()
        elif evento.type == pygame.KEYDOWN:
            jugador.update(evento)
            
    bolita.update()
    if pygame.sprite.collide_rect(bolita, jugador):
        bolita.speed[1]=-bolita.speed[1]
    
    lista=pygame.sprite.spritecollide(bolita,muro,False)
    if lista:
        ladrillo = lista[0]
        cx=bolita.rect.centerx
        if cx < ladrillo.rect.left or cx > ladrillo.rect.right:
            bolita.speed[0]=-bolita.speed[0]
        else:
            bolita.speed[1]= -bolita.speed[1]
        muro.remove(ladrillo)
        puntuacion+=10
    if bolita.rect.top> LARGO:
        juego_terminado()
        
    
    pantalla.fill(color_azul)
    mostrar_puntuacion()
    pantalla.blit(bolita.image, bolita.rect)
    pantalla.blit(jugador.image, jugador.rect)
    muro.draw(pantalla)
    pygame.display.flip()
